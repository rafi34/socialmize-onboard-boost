
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://psauygzfbxvefnetudem.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBzYXV5Z3pmYnh2ZWZuZXR1ZGVtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU4NzkzODYsImV4cCI6MjA2MTQ1NTM4Nn0.xCszNtCzvfWEDbz61mJUxXzTJkWfzQncPlXRQtFjBW8";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to upsert a strategy profile (update if exists, insert if not)
export const upsertStrategyProfile = async (userId: string, data: any) => {
  // First check if a profile exists
  const { data: existingProfile } = await supabase
    .from('strategy_profiles')
    .select('id')
    .eq('user_id', userId)
    .order('created_at', { ascending: false })
    .limit(1)
    .single();

  if (existingProfile) {
    // Update existing profile
    return supabase
      .from('strategy_profiles')
      .update(data)
      .eq('id', existingProfile.id)
      .select();
  } else {
    // Create new profile
    return supabase
      .from('strategy_profiles')
      .insert({
        ...data,
        user_id: userId
      })
      .select();
  }
};
